{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\New folder (4)\\\\my-app\\\\src\\\\Components\\\\NotesList.tsx\";\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport NotesList from './NotesList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockList = [{\n  id: 1,\n  status: false,\n  title: 'Test Title 1',\n  content: 'Test Content 1'\n}, {\n  id: 2,\n  status: true,\n  title: 'Test Title 2',\n  content: 'Test Content 2'\n}];\nconst mockProps = {\n  list: mockList,\n  handleDelete: jest.fn(),\n  handleEdit: jest.fn(),\n  handleStatus: jest.fn()\n};\ndescribe('NotesList component', () => {\n  test('renders list items with correct data', () => {\n    const {\n      getByText\n    } = render( /*#__PURE__*/_jsxDEV(NotesList, {\n      ...mockProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 34\n    }, this));\n    expect(getByText('Test Title 1')).toBeInTheDocument();\n    expect(getByText('Test Content 1')).toBeInTheDocument();\n    expect(getByText('Test Title 2')).toBeInTheDocument();\n    expect(getByText('Test Content 2')).toBeInTheDocument();\n  });\n  test('calls handleDelete function with correct id when delete button is clicked', () => {\n    const {\n      getAllByLabelText\n    } = render( /*#__PURE__*/_jsxDEV(NotesList, {\n      ...mockProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 42\n    }, this));\n    fireEvent.click(getAllByLabelText('Delete')[0]); // Click the first delete button\n    expect(mockProps.handleDelete).toHaveBeenCalledWith(1);\n  });\n  test('calls handleEdit function with correct id when edit button is clicked', () => {\n    const {\n      getAllByLabelText\n    } = render( /*#__PURE__*/_jsxDEV(NotesList, {\n      ...mockProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 42\n    }, this));\n    fireEvent.click(getAllByLabelText('Edit')[0]); // Click the first edit button\n    expect(mockProps.handleEdit).toHaveBeenCalledWith(1);\n  });\n  test('calls handleStatus function with correct id when checkbox is clicked', () => {\n    const {\n      getByLabelText\n    } = render( /*#__PURE__*/_jsxDEV(NotesList, {\n      ...mockProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 39\n    }, this));\n    fireEvent.click(getByLabelText('Checkbox for Test Title 1')); // Click the checkbox for the first item\n    expect(mockProps.handleStatus).toHaveBeenCalledWith(1);\n  });\n});","map":{"version":3,"names":["React","render","fireEvent","NotesList","jsxDEV","_jsxDEV","mockList","id","status","title","content","mockProps","list","handleDelete","jest","fn","handleEdit","handleStatus","describe","test","getByText","fileName","_jsxFileName","lineNumber","columnNumber","expect","toBeInTheDocument","getAllByLabelText","click","toHaveBeenCalledWith","getByLabelText"],"sources":["C:/Users/aksha/OneDrive/Desktop/New folder (4)/my-app/src/Components/NotesList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react';\r\nimport NotesList from './NotesList';\r\n\r\nconst mockList = [\r\n  { id: 1, status: false, title: 'Test Title 1', content: 'Test Content 1' },\r\n  { id: 2, status: true, title: 'Test Title 2', content: 'Test Content 2' },\r\n];\r\n\r\nconst mockProps = {\r\n  list: mockList,\r\n  handleDelete: jest.fn(),\r\n  handleEdit: jest.fn(),\r\n  handleStatus: jest.fn(),\r\n};\r\n\r\ndescribe('NotesList component', () => {\r\n  test('renders list items with correct data', () => {\r\n    const { getByText } = render(<NotesList {...mockProps} />);\r\n    expect(getByText('Test Title 1')).toBeInTheDocument();\r\n    expect(getByText('Test Content 1')).toBeInTheDocument();\r\n    expect(getByText('Test Title 2')).toBeInTheDocument();\r\n    expect(getByText('Test Content 2')).toBeInTheDocument();\r\n  });\r\n\r\n  test('calls handleDelete function with correct id when delete button is clicked', () => {\r\n    const { getAllByLabelText } = render(<NotesList {...mockProps} />);\r\n    fireEvent.click(getAllByLabelText('Delete')[0]); // Click the first delete button\r\n    expect(mockProps.handleDelete).toHaveBeenCalledWith(1);\r\n  });\r\n\r\n  test('calls handleEdit function with correct id when edit button is clicked', () => {\r\n    const { getAllByLabelText } = render(<NotesList {...mockProps} />);\r\n    fireEvent.click(getAllByLabelText('Edit')[0]); // Click the first edit button\r\n    expect(mockProps.handleEdit).toHaveBeenCalledWith(1);\r\n  });\r\n\r\n  test('calls handleStatus function with correct id when checkbox is clicked', () => {\r\n    const { getByLabelText } = render(<NotesList {...mockProps} />);\r\n    fireEvent.click(getByLabelText('Checkbox for Test Title 1')); // Click the checkbox for the first item\r\n    expect(mockProps.handleStatus).toHaveBeenCalledWith(1);\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}