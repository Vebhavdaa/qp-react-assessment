{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\New folder (4)\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CreateArea from \"./Components/CreateArea\";\nimport Header from \"./Components/Header\";\nimport NotesList from \"./Components/NotesList\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const initialList = JSON.parse(localStorage.getItem(\"list\") || \"[]\");\n  const [list, setList] = useState(initialList);\n  const [editMode, setEditMode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [editId, setEditId] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim() || !content.trim()) {\n      notifyWarning(\"Please fill all the fields\");\n      return;\n    }\n    if (editMode) {\n      handleEditNote();\n    } else {\n      addNewNote();\n    }\n  };\n  const notifySuccess = message => {\n    toast.success(message, {\n      autoClose: 2000\n    });\n  };\n  const notifyWarning = message => {\n    toast.warning(message, {\n      autoClose: 2000\n    });\n  };\n  const addNewNote = () => {\n    const newNote = {\n      id: new Date().getTime(),\n      status: false,\n      title: title,\n      content: content\n    };\n    setList([...list, newNote]);\n    clearInputs();\n    notifySuccess(\"Added Successfully\");\n  };\n  const handleEditNote = () => {\n    const updatedList = list.map(el => el.id === editId ? {\n      ...el,\n      title: title,\n      content: content\n    } : el);\n    setList(updatedList);\n    clearInputs();\n    setEditMode(false);\n    setEditId(null);\n    notifySuccess(\"Edited Successfully\");\n  };\n  const handleDelete = id => {\n    const updatedList = list.filter(note => note.id !== id);\n    setList(updatedList);\n    notifySuccess(\"Deleted Successfully\");\n  };\n  const handleEdit = id => {\n    const editNote = list.find(note => note.id === id);\n    if (editNote) {\n      setTitle(editNote.title);\n      setContent(editNote.content);\n      setEditId(id);\n      setEditMode(true);\n    }\n  };\n  const handleStatus = id => {\n    var _updatedList$find;\n    const updatedList = list.map(note => note.id === id ? {\n      ...note,\n      status: !note.status\n    } : note);\n    setList(updatedList);\n    const statusMessage = (_updatedList$find = updatedList.find(note => note.id === id)) !== null && _updatedList$find !== void 0 && _updatedList$find.status ? \"complete\" : \"incomplete\";\n    const confirmation = window.confirm(`Are you sure you want to mark this ${statusMessage}?`);\n    if (!confirmation) {\n      setList(list);\n    }\n  };\n  const clearInputs = () => {\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      title: title,\n      setTitle: setTitle,\n      content: content,\n      setContent: setContent,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      list: list,\n      handleDelete: handleDelete,\n      handleEdit: handleEdit,\n      handleStatus: handleStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(list),\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+Pa2fQv612vIG8Gh9uPcQmKg0Hc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CreateArea","Header","NotesList","toast","ToastContainer","jsxDEV","_jsxDEV","App","_s","initialList","JSON","parse","localStorage","getItem","list","setList","editMode","setEditMode","title","setTitle","content","setContent","editId","setEditId","handleSubmit","e","preventDefault","trim","notifyWarning","handleEditNote","addNewNote","notifySuccess","message","success","autoClose","warning","newNote","id","Date","getTime","status","clearInputs","updatedList","map","el","handleDelete","filter","note","handleEdit","editNote","find","handleStatus","_updatedList$find","statusMessage","confirmation","window","confirm","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/New folder (4)/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CreateArea from \"./Components/CreateArea\";\nimport Header from \"./Components/Header\";\nimport NotesList from \"./Components/NotesList\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ninterface Note {\n  id: number;\n  status: boolean;\n  title: string;\n  content: string;\n}\n\nconst App: React.FC = () => {\n  const initialList: Note[] = JSON.parse(localStorage.getItem(\"list\") || \"[]\");\n\n  const [list, setList] = useState<Note[]>(initialList);\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [editId, setEditId] = useState<number | null>(null);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!title.trim() || !content.trim()) {\n      notifyWarning(\"Please fill all the fields\");\n      return;\n    }\n    if (editMode) {\n      handleEditNote();\n    } else {\n      addNewNote();\n    }\n  };\n\n  const notifySuccess = (message: string) => {\n    toast.success(message, { autoClose: 2000 });\n  };\n\n  const notifyWarning = (message: string) => {\n    toast.warning(message, { autoClose: 2000 });\n  };\n\n  const addNewNote = () => {\n    const newNote: Note = {\n      id: new Date().getTime(),\n      status: false,\n      title: title,\n      content: content,\n    };\n    setList([...list, newNote]);\n    clearInputs();\n    notifySuccess(\"Added Successfully\");\n  };\n\n  const handleEditNote = () => {\n    const updatedList = list.map((el) =>\n      el.id === editId ? { ...el, title: title, content: content } : el\n    );\n    setList(updatedList);\n    clearInputs();\n    setEditMode(false);\n    setEditId(null);\n    notifySuccess(\"Edited Successfully\");\n  };\n\n  const handleDelete = (id: number) => {\n    const updatedList = list.filter((note) => note.id !== id);\n    setList(updatedList);\n    notifySuccess(\"Deleted Successfully\");\n  };\n\n  const handleEdit = (id: number) => {\n    const editNote = list.find((note) => note.id === id);\n    if (editNote) {\n      setTitle(editNote.title);\n      setContent(editNote.content);\n      setEditId(id);\n      setEditMode(true);\n    }\n  };\n\n  const handleStatus = (id: number) => {\n    const updatedList = list.map((note) =>\n      note.id === id ? { ...note, status: !note.status } : note\n    );\n    setList(updatedList);\n    const statusMessage = updatedList.find((note) => note.id === id)?.status\n      ? \"complete\"\n      : \"incomplete\";\n    const confirmation = window.confirm(\n      `Are you sure you want to mark this ${statusMessage}?`\n    );\n    if (!confirmation) {\n      setList(list);\n    }\n  };\n\n  const clearInputs = () => {\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Header />\n      <CreateArea\n        title={title}\n        setTitle={setTitle}\n        content={content}\n        setContent={setContent}\n        handleSubmit={handleSubmit}\n      />\n      <NotesList\n        list={list}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        handleStatus={handleStatus}\n      />\n      {/* Debugging button */}\n      <button onClick={() => console.log(list)}>Check</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}